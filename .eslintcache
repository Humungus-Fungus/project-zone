[{"C:\\Users\\Welcome\\Desktop\\LGMsoc'21\\project-zone\\src\\index.js":"1","C:\\Users\\Welcome\\Desktop\\LGMsoc'21\\project-zone\\src\\datalayer.js":"2","C:\\Users\\Welcome\\Desktop\\LGMsoc'21\\project-zone\\src\\App.js":"3","C:\\Users\\Welcome\\Desktop\\LGMsoc'21\\project-zone\\src\\reducer.js":"4","C:\\Users\\Welcome\\Desktop\\LGMsoc'21\\project-zone\\src\\components\\Callback.js":"5","C:\\Users\\Welcome\\Desktop\\LGMsoc'21\\project-zone\\src\\components\\Home\\Home.js":"6","C:\\Users\\Welcome\\Desktop\\LGMsoc'21\\project-zone\\src\\components\\Navbar\\Navbar.js":"7","C:\\Users\\Welcome\\Desktop\\LGMsoc'21\\project-zone\\src\\components\\Login\\Login.js":"8","C:\\Users\\Welcome\\Desktop\\LGMsoc'21\\project-zone\\src\\components\\ShowProjects\\Showprojects.js":"9","C:\\Users\\Welcome\\Desktop\\LGMsoc'21\\project-zone\\src\\components\\AddNewProject\\AddNewProject.js":"10","C:\\Users\\Welcome\\Desktop\\LGMsoc'21\\project-zone\\src\\magic.js":"11","C:\\Users\\Welcome\\Desktop\\LGMsoc'21\\project-zone\\src\\components\\SearchBox\\SearchBox.js":"12","C:\\Users\\Welcome\\Desktop\\LGMsoc'21\\project-zone\\src\\client.js":"13","C:\\Users\\Welcome\\Desktop\\LGMsoc'21\\project-zone\\src\\components\\Project\\Project.js":"14"},{"size":407,"mtime":1623477769500,"results":"15","hashOfConfig":"16"},{"size":398,"mtime":1623477769499,"results":"17","hashOfConfig":"16"},{"size":936,"mtime":1623477768986,"results":"18","hashOfConfig":"16"},{"size":925,"mtime":1623477769586,"results":"19","hashOfConfig":"16"},{"size":1425,"mtime":1623477769001,"results":"20","hashOfConfig":"16"},{"size":5589,"mtime":1623484766451,"results":"21","hashOfConfig":"16"},{"size":2096,"mtime":1623477769034,"results":"22","hashOfConfig":"16"},{"size":5248,"mtime":1623477769019,"results":"23","hashOfConfig":"16"},{"size":4241,"mtime":1623477769421,"results":"24","hashOfConfig":"16"},{"size":7819,"mtime":1623477769001,"results":"25","hashOfConfig":"16"},{"size":196,"mtime":1623477769586,"results":"26","hashOfConfig":"16"},{"size":919,"mtime":1623477769350,"results":"27","hashOfConfig":"16"},{"size":492,"mtime":1623477768987,"results":"28","hashOfConfig":"16"},{"size":707,"mtime":1623481226903,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"jrq39j",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\Welcome\\Desktop\\LGMsoc'21\\project-zone\\src\\index.js",[],["63","64"],"C:\\Users\\Welcome\\Desktop\\LGMsoc'21\\project-zone\\src\\datalayer.js",[],"C:\\Users\\Welcome\\Desktop\\LGMsoc'21\\project-zone\\src\\App.js",[],"C:\\Users\\Welcome\\Desktop\\LGMsoc'21\\project-zone\\src\\reducer.js",[],"C:\\Users\\Welcome\\Desktop\\LGMsoc'21\\project-zone\\src\\components\\Callback.js",["65","66","67"],"import React, { useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDataLayerValues } from '../datalayer';\r\nimport { magic } from '../magic';\r\nimport { actions } from '../reducer';\r\n\r\nfunction Callback(props)\r\n{\r\n    \r\n    const history = useHistory();\r\n    const [{ isAuthenticated }, dispatch] = useDataLayerValues();\r\n\r\n    const finishSocialLogin = async () =>\r\n    {\r\n        const data = await magic.oauth.getRedirectResult();\r\n        \r\n        const magicData = await data.magic;\r\n        const oauthData = await data.oauth;\r\n\r\n        const user = {\r\n            email: oauthData.userInfo.email,\r\n            fname: oauthData.userInfo.givenName,\r\n            lname: oauthData.userInfo.familyName,\r\n            picture: oauthData.userInfo.picture,\r\n        }\r\n\r\n        dispatch({\r\n            type: actions.SET_USER,\r\n            user: user,\r\n        });\r\n\r\n        dispatch({\r\n            type: actions.SET_AUTH,\r\n            isAuthenticated: true,\r\n        });\r\n\r\n        history.push(\"/\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        const provider = new URLSearchParams(props.location.search).get('provider');\r\n        \r\n        if (provider)\r\n        {            \r\n            finishSocialLogin();\r\n        }\r\n        \r\n    }, [props.location.search]);\r\n\r\n    return (\r\n        <div>\r\n            <h1>This is callback</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Callback;\r\n","C:\\Users\\Welcome\\Desktop\\LGMsoc'21\\project-zone\\src\\components\\Home\\Home.js",[],"C:\\Users\\Welcome\\Desktop\\LGMsoc'21\\project-zone\\src\\components\\Navbar\\Navbar.js",[],"C:\\Users\\Welcome\\Desktop\\LGMsoc'21\\project-zone\\src\\components\\Login\\Login.js",[],"C:\\Users\\Welcome\\Desktop\\LGMsoc'21\\project-zone\\src\\components\\ShowProjects\\Showprojects.js",["68"],"import React, { useState } from 'react';\r\nimport SearchBox from '../SearchBox/SearchBox';\r\nimport \"./ShowProjects.css\";\r\nimport { client, options } from \"../../client\";\r\nimport { useDataLayerValues } from '../../datalayer';\r\nimport { useEffect } from 'react';\r\nimport Project from '../Project/Project';\r\n\r\nfunction Showprojects()\r\n{\r\n\r\n    const [projects, setProjects] = useState();\r\n    const [{ query }] = useDataLayerValues();\r\n\r\n    const filters = [\"beginner\", \"intermediate\", \"advanced\"];\r\n    const [appliedFilters, setAppliedFilters] = useState([]);\r\n\r\n    const [randomProject, setRandomProject] = useState(\"\");\r\n\r\n    const fetchProjects = async () =>\r\n    {\r\n        try\r\n        {\r\n            const results = await client.search(query, options);\r\n\r\n            setProjects(results.rawResults);\r\n        }\r\n        catch (error)\r\n        {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() =>\r\n    {\r\n        fetchProjects();\r\n\r\n    }, [query, options]);\r\n\r\n    const handleRandomProject = () =>\r\n    {\r\n        setRandomProject(projects[(Math.floor(Math.random() * projects.length))]);\r\n    }\r\n\r\n\r\n    const handleFilter = (e, filter) =>\r\n    {\r\n        var newFil = appliedFilters;\r\n\r\n        if (appliedFilters.includes(filter))\r\n        {\r\n            e.target.style.backgroundColor = \"#ccc\";\r\n            e.target.style.color = \"#000\";\r\n\r\n            newFil.splice(newFil.indexOf(filter), 1)\r\n            setAppliedFilters(newFil)\r\n        }\r\n        else\r\n        {\r\n            e.target.style.backgroundColor = \"#ff5959\";\r\n            e.target.style.color = \"#FFF\";\r\n            newFil.push(filter)\r\n            setAppliedFilters(newFil);\r\n        }\r\n\r\n        if (appliedFilters.length === 0)\r\n        {\r\n            options[\"filters\"] = {\r\n                \"level\": filters\r\n            };\r\n        }\r\n        else\r\n        {\r\n            options[\"filters\"] = {\r\n                \"level\": appliedFilters\r\n            };\r\n        }\r\n\r\n        fetchProjects();\r\n    }\r\n\r\n    return (\r\n        <div className=\"showProjects\">\r\n\r\n            <div className=\"mt\">\r\n                <SearchBox />\r\n            </div>\r\n\r\n            <div className=\"filtersBox\">\r\n                <div className=\"filters\">\r\n\r\n                    {\r\n                        filters.map((filter, ind) =>\r\n                        {\r\n                            return (\r\n                                <div\r\n                                    className=\"filter\"\r\n                                    key={ind}\r\n                                    onClick={(e) => handleFilter(e, filter)}\r\n                                >\r\n                                    {filter}\r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n                </div>\r\n\r\n                <button className=\"random\" onClick={handleRandomProject}>Let us decide a project for you.</button>\r\n            </div>\r\n\r\n            \r\n            {\r\n                randomProject ?\r\n                    (<div className=\"randomProject\">\r\n                        <Project\r\n                            title={randomProject.name.raw}\r\n                            desc={randomProject.description.raw}\r\n                            skills={randomProject.skills.raw}\r\n                            level={randomProject.level.raw}\r\n                            style={{ backgroundColor: \"#ff5959\", color: \"#FFF\" }}\r\n                        />\r\n                    </div>)\r\n                    : null\r\n            }\r\n\r\n            <h2 className=\"query\"> Searching projects for \"{query}\" </h2>\r\n\r\n            <div className=\"projectsList\">\r\n\r\n                {\r\n                    projects && projects.map((project, ind) =>\r\n                    {\r\n                        return <Project\r\n                            key={ind}\r\n                            title={project.name.raw}\r\n                            desc={project.description.raw}\r\n                            skills={project.skills.raw}\r\n                            level={project.level.raw}\r\n                        />\r\n                    })\r\n                }\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Showprojects;\r\n","C:\\Users\\Welcome\\Desktop\\LGMsoc'21\\project-zone\\src\\components\\AddNewProject\\AddNewProject.js",["69","70"],"import React, { useState } from \"react\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Button from '@material-ui/core/Button';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    mt: {\r\n        marginTop: \"1rem\",\r\n    },\r\n    textarea: {\r\n        padding: \"1rem\",\r\n        marginTop: \"1rem\",\r\n    },\r\n    text: {\r\n        textAlign: \"center\",\r\n        fontWeight: \"bold\",\r\n        marginBottom: '1rem',\r\n    }\r\n}));\r\n\r\nfunction AddNewProject()\r\n{\r\n    const classes = useStyles();\r\n\r\n    const [data, setData] = useState(\"\");\r\n    const [skillInputs, setSkillInputs] = useState([\"\"]);\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [level, setLevel] = useState(\"\");\r\n    const [desc, setDesc] = useState(\"\");\r\n\r\n    const submitBtnStyle = {\r\n        backgroundColor: \"#ff5959\",\r\n        color: '#FFF',\r\n    }\r\n\r\n\r\n    const handleChange = (i, event) =>\r\n    {\r\n        const values = [...skillInputs];\r\n        values[i] = event.target.value;\r\n        setSkillInputs(values);\r\n    }\r\n\r\n    function handleAdd()\r\n    {\r\n        const values = [...skillInputs];\r\n        values.push(\"\");\r\n        setSkillInputs(values);\r\n    }\r\n\r\n    function handleRemove(i)\r\n    {\r\n        const values = [...skillInputs];\r\n        values.splice(i, 1);\r\n        setSkillInputs(values);\r\n    }\r\n\r\n    const handleSubmit = async () =>\r\n    {\r\n        if (!title || !level || !desc || !skillInputs[0])\r\n        {\r\n            window.alert(\"Please fill the form completely.\")\r\n        }\r\n        else\r\n        {\r\n            const data = {\r\n                name: title,\r\n                level: level,\r\n                skills: skillInputs,\r\n                description: desc\r\n            }\r\n\r\n            try\r\n            {\r\n                const res = await fetch(\"https://project-zone.ent.asia-south1.gcp.elastic-cloud.com/api/as/v1/engines/project-zone/documents\", {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": \"Bearer private-zaptmpeyibkdp9x6exesnb98\"\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                });\r\n\r\n                if (res.status === 200)\r\n                {\r\n                    toast.success('Project added successfully.', {\r\n                        position: \"top-right\",\r\n                        autoClose: 3000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                    });\r\n                }\r\n                else\r\n                {\r\n                    toast.error('Sorry!! Your project could not be added.', {\r\n                        position: \"top-right\",\r\n                        autoClose: 3000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                    });\r\n                }\r\n                \r\n                setTitle(\"\");\r\n                setLevel(\"\");\r\n                setDesc(\"\");\r\n                setSkillInputs([\"\"]);\r\n            }\r\n            catch (err)\r\n            {\r\n                console.log(err);\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ToastContainer />\r\n            <Box\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n                minHeight=\"90vh\"\r\n            >\r\n\r\n                <Box boxShadow={1} width=\"80%\" padding=\"2rem\">\r\n                    <Typography variant=\"h4\" className={classes.text}>\r\n                        Add New Project\r\n                </Typography>\r\n                    <FormControl fullWidth>\r\n                        <TextField\r\n                            label=\"Project Title\"\r\n                            variant=\"outlined\"\r\n                            value={title}\r\n                            onChange={(e) => setTitle(e.target.value)}\r\n                            required={true}\r\n                        />\r\n                        <TextField\r\n                            className={classes.mt}\r\n                            label=\"Project Level\"\r\n                            variant=\"outlined\"\r\n                            value={level}\r\n                            onChange={(e) => setLevel(e.target.value)}\r\n                            required={true}\r\n                        />\r\n\r\n                        {skillInputs.map((field, idx) =>\r\n                        {\r\n                            return (\r\n                                <Box key={idx} display=\"flex\" alignItems=\"center\">\r\n\r\n                                    <TextField\r\n                                        className={classes.mt}\r\n                                        label=\"Project Skill\"\r\n                                        variant=\"outlined\"\r\n                                        onChange={e => handleChange(idx, e)}\r\n                                        required={true}\r\n                                    />\r\n\r\n                                    <IconButton\r\n                                        color=\"inherit\"\r\n                                        onClick={handleAdd}\r\n                                    >\r\n                                        <AddIcon />\r\n                                    </IconButton>\r\n\r\n                                    {\r\n                                        idx > 0 ? (\r\n                                            <IconButton\r\n                                                color=\"inherit\"\r\n                                                onClick={handleRemove}\r\n                                            >\r\n                                                <DeleteIcon />\r\n                                            </IconButton>\r\n                                        ) :\r\n                                            null\r\n                                    }\r\n\r\n                                </Box>\r\n                            );\r\n                        })}\r\n                        <TextareaAutosize\r\n                            aria-label=\"minimum height\"\r\n                            className={classes.textarea}\r\n                            rowsMin={5}\r\n                            placeholder=\"Description\"\r\n                            value={desc}\r\n                            onChange={(e) => setDesc(e.target.value)}\r\n                            required={true}\r\n                        />\r\n\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            style={submitBtnStyle}\r\n                            className={classes.mt}\r\n                            startIcon={<PublishIcon />}\r\n                            onClick={handleSubmit}\r\n                        >\r\n                            Submit\r\n                    </Button>\r\n                    </FormControl>\r\n                </Box>\r\n            </Box>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddNewProject;\r\n","C:\\Users\\Welcome\\Desktop\\LGMsoc'21\\project-zone\\src\\magic.js",[],"C:\\Users\\Welcome\\Desktop\\LGMsoc'21\\project-zone\\src\\components\\SearchBox\\SearchBox.js",["71"],"import React, { useState } from 'react';\r\nimport \"./SearchBox.css\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { actions } from \"../../reducer\";\r\nimport { useDataLayerValues } from \"../../datalayer\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nfunction SearchBox()\r\n{\r\n    const [{ query }, dispatch] = useDataLayerValues();\r\n    const history = useHistory();\r\n\r\n\r\n\r\n    const handleChange = (e) =>\r\n    {\r\n        dispatch({\r\n            type: actions.SET_QUERY,\r\n            query: e.target.value\r\n        });\r\n    }\r\n    return (\r\n        <div className=\"searchBox\">\r\n            <div className=\"input\">\r\n                <input type=\"text\" value={query} onChange={handleChange} placeholder=\"e.g. reactjs\" />\r\n                <SearchIcon onClick={ () => history.push(\"/projects\")} style={{ cursor: \"pointer\" }} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;\r\n","C:\\Users\\Welcome\\Desktop\\LGMsoc'21\\project-zone\\src\\client.js",[],"C:\\Users\\Welcome\\Desktop\\LGMsoc'21\\project-zone\\src\\components\\Project\\Project.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":11,"column":14,"nodeType":"78","messageId":"79","endLine":11,"endColumn":29},{"ruleId":"76","severity":1,"message":"80","line":17,"column":15,"nodeType":"78","messageId":"79","endLine":17,"endColumn":24},{"ruleId":"81","severity":1,"message":"82","line":48,"column":8,"nodeType":"83","endLine":48,"endColumn":31,"suggestions":"84"},{"ruleId":"81","severity":1,"message":"85","line":38,"column":8,"nodeType":"83","endLine":38,"endColumn":24,"suggestions":"86"},{"ruleId":"76","severity":1,"message":"87","line":36,"column":12,"nodeType":"78","messageId":"79","endLine":36,"endColumn":16},{"ruleId":"76","severity":1,"message":"88","line":36,"column":18,"nodeType":"78","messageId":"79","endLine":36,"endColumn":25},{"ruleId":"76","severity":1,"message":"89","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":25},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'isAuthenticated' is assigned a value but never used.","Identifier","unusedVar","'magicData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'finishSocialLogin'. Either include it or remove the dependency array.","ArrayExpression",["92"],"React Hook useEffect has a missing dependency: 'fetchProjects'. Either include it or remove the dependency array. Outer scope values like 'options' aren't valid dependencies because mutating them doesn't re-render the component.",["93"],"'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},"Update the dependencies array to be: [finishSocialLogin, props.location.search]",{"range":"98","text":"99"},"Update the dependencies array to be: [query, fetchProjects]",{"range":"100","text":"101"},[1274,1297],"[finishSocialLogin, props.location.search]",[969,985],"[query, fetchProjects]"]